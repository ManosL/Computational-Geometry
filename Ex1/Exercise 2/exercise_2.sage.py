
# This file was *autogenerated* from the file exercise_2.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_0 = Integer(0); _sage_const_4 = Integer(4)
x = var('x')
y = var('y')

r = input('Give the radius of the circle to find the lattice points: ')

assume(x, 'integer')
assume(y, 'integer')

res_1st_way = len(solve([x**_sage_const_2  + y**_sage_const_2  == r**_sage_const_2 ],x,y))

#Count Lattice Second way
def countLattice(r): 
    
    result = _sage_const_0  
    
    # Every possible x 
    for x in range(_sage_const_0 , r):
        
        # Find a potential y 
        yy = r*r - x*x  
        y = int(math.sqrt(yy))  
  
        #check if value is in the circle
        # if yes add 4 
        if (y*y + x*x) == r*r:
            result += _sage_const_4  
       
    return result 

if countLattice(r) != res_1st_way:
	print 'Some algorithm is wrong'
else:
	print '\nCircle with center the point (0,0) and radius ' + str(r) +\
		' has ' + str(res_1st_way) +\
		' lattice points'
 

